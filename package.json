{
  "name": "nommie",
  "private": true,
  "workspaces": [
    "apps/*"
  ],
  "scripts": {
    "dev": "concurrently --prefix-colors 'green,yellow' --prefix '[{name}]' --names 'backend,frontend' 'pnpm run dev:backend' 'pnpm run dev:frontend'",
    "dev:stop": "pkill -f concurrently",
    "dev:backend": "cd apps/backend && cargo watch -x run",
    "dev:frontend": "cd apps/frontend && pnpm dev",

    "build": "pnpm --recursive run build",
    "test": "pnpm --recursive run test",

    "db:start": "docker compose up -d postgres",
    "db:stop": "docker compose down",
    "db:restart": "docker compose restart postgres",
    "db:logs": "docker compose logs -f postgres",
    "db:reset": "docker compose down -v && docker compose up -d --build postgres",
    "test:int": "bash scripts/test-int.sh",

    "backend:fmt": "cargo fmt --manifest-path ./apps/backend/Cargo.toml",
    "backend:fmt:check": "cargo fmt --manifest-path ./apps/backend/Cargo.toml -- --check",
    "backend:clippy": "cargo clippy --manifest-path ./apps/backend/Cargo.toml --all-targets --all-features -- -D warnings",

    "frontend:lint": "pnpm -C apps/frontend exec eslint --max-warnings=0",
    "frontend:lint:all": "pnpm run frontend:lint -- .",

    "frontend:fmt": "pnpm -C apps/frontend exec prettier --write",
    "frontend:fmt:all": "pnpm run frontend:fmt -- .",

    "frontend:fmt:check": "pnpm -C apps/frontend exec prettier --check",
    "frontend:fmt:check:all": "pnpm run frontend:fmt:check -- .",

    "frontend:typecheck": "pnpm -C apps/frontend exec tsc -p tsconfig.json --noEmit",

    "hooks:install": "git config core.hooksPath .githooks"
  },
  "devDependencies": {
    "concurrently": "^9.2.0",
    "wait-on": "^7.2.0"
  }
}
